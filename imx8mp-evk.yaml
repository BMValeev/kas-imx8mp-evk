#  Sparktech/Uwings for imx8mp-evk
#
# Authors:
#   KunYi <kunyi.chen@gmail.com>
#
# SPDX-License-Identifier: MIT
#
header:
  version: 10

repos:
  adu:

  poky:
    url: "https://git.yoctoproject.org/git/poky"
    refspec: 943ef2fad8428f002850e3655a3312e13d0dcb2c
    layers:
        meta:
        meta-poky:
#
  meta-openembedded:
    url: "https://github.com/openembedded/meta-openembedded.git"
    refspec: ac4ccd2fbbb599d75ca4051911fcbaca39dbe6d7
    layers:
        meta-oe:
        meta-multimedia:
        meta-networking:
        meta-python:
        meta-filesystems:
        meta-gnome:

    #patches:
    #  01-fixed-build-error-for-websocketpp:
    #    path: patches/0001-fixed-build-error-for-websocketpp.patch
    #    repo: adu


  meta-clang:
    url: "https://github.com/kraj/meta-clang.git"
    refspec: 61faae011fb95712064f2c58abe6293f0daeeab5


  meta-freescale:
    url: "https://github.com/Freescale/meta-freescale.git"
    refspec: 41d4f625c6db7a778f0f9a735c2cb48e023bc49b
#    patches:
#      01-to-remove-imx8mp-evk-conf:
#        path: patches/0001-remove-imx8mn-imx8mp-evk-conf.patch
#        repo: adu

  meta-freescale-3rdparty:
    url: "https://github.com/Freescale/meta-freescale-3rdparty.git"
    refspec: b85d08a55cb833bfc4e8b5034ff804286c67620e

  meta-freescale-distro:
    url: "https://github.com/Freescale/meta-freescale-distro.git"
    refspec: 11be3f01962df8436c5c7b0d61cd3dbd1b872905
########2a9d9c602188827201945847457941d86ee2c3f9
  meta-imx:
    url: "https://github.com/nxp-imx/meta-imx.git"
    refspec: 83d7642fe53f1cd3871cf2b2692b61459237cd64
    layers:
      meta-bsp:
      meta-ml:
      meta-sdk:

  meta-python2:
    url: "https://git.openembedded.org/meta-python2"
    refspec: c43c29e57f16af4e77441b201855321fbd546661

  meta-rust:
    url: "https://github.com/meta-rust/meta-rust.git"
    refspec: 53bfa324891966a2daf5d36dc13d4a43725aebed

#  meta-rust-bin:
#    url: "https://github.com/rust-embedded/meta-rust-bin.git"
#    refspec: f8e79ed922c765fca224b2318ab172e0b59f4a4d

  # QT5.15.x for gatesgarth
  meta-qt5:
    url: "https://code.qt.io/yocto/meta-qt5.git"
    refspec: 8d5672cc6ca327576a814d35dfb5d59ab24043cb

#  meta-nxp-demo-experience:
#    url: https://github.com/nxp-imx-support/meta-nxp-demo-experience.git
#    refspec: 60578a5dbbfc9abc360a12e2cef7b64bfa582904
#    patches:
#      01_add_compatible:
#        repo: adu
#        path: patches/0001-add-layer-compatible-for-dunfell-gatesgarth.patch

#  meta-swupdate:
#   url: "https://github.com/sbabic/meta-swupdate.git"
#   refspec: c06067a0e10fe59d0fecbca629495ecbcdd1d5a2

#  meta-browser:
#    url: "https://github.com/OSSystems/meta-browser.git"
#    refspec: 830ef438e81ba5fc915b1855e69f02b2c286b21a
#    layers:
#        meta-chromium:
#        meta-firefox:

bblayers_conf_header:
  standard: |
    # POKY_BBLAYERS_CONF_VERSION is increased each time build/conf/bblayers.conf
    # changes incompatibly
    POKY_BBLAYERS_CONF_VERSION = "2"
    BBPATH = "${TOPDIR}"
    BBFILES ?= ""

distro: poky
target: core-image-minimal

local_conf_header:
  standard: |
    CONF_VERSION = "1"
  machine: |
    MACHINE = "imx8mpevk"
  distro: |
    DISTRO ?= "poky"
  sdk_machine: |
    SDKMACHINE = "x86_64"
  misc: |
    #
    # Package Management configuration
    #
    # This variable lists which packaging formats to enable. Multiple package backends
    # can be enabled at once and the first item listed in the variable will be used
    # to generate the root filesystems.
    # Options are:
    #  - 'package_deb' for debian style deb files
    #  - 'package_ipk' for ipk files are used by opkg (a debian style embedded package manager)
    #  - 'package_rpm' for rpm style packages
    # E.g.: PACKAGE_CLASSES ?= "package_rpm package_deb package_ipk"
    # We default to rpm:
    PACKAGE_CLASSES ?= "package_deb"

    #
    # Additional image features
    #
    # The following is a list of additional classes to use when building images which
    # enable extra features. Some available options which can be included in this variable
    # are:
    #   - 'buildstats' collect build statistics
    #   - 'image-mklibs' to reduce shared library files size for an image
    #   - 'image-prelink' in order to prelink the filesystem image
    # NOTE: if listing mklibs & prelink both, then make sure mklibs is before prelink
    # NOTE: mklibs also needs to be explicitly enabled for a given image, see local.conf.extended
    USER_CLASSES ?= "buildstats image-mklibs image-prelink"

    #
    # Extra image configuration defaults
    #
    # The EXTRA_IMAGE_FEATURES variable allows extra packages to be added to the generated
    # images. Some of these options are added to certain image types automatically. The
    # variable can contain the following options:
    #  "dbg-pkgs"       - add -dbg packages for all installed packages
    #                     (adds symbol information for debugging/profiling)
    #  "src-pkgs"       - add -src packages for all installed packages
    #                     (adds source code for debugging)
    #  "dev-pkgs"       - add -dev packages for all installed packages
    #                     (useful if you want to develop against libs in the image)
    #  "ptest-pkgs"     - add -ptest packages for all ptest-enabled packages
    #                     (useful if you want to run the package test suites)
    #  "tools-sdk"      - add development tools (gcc, make, pkgconfig etc.)
    #  "tools-debug"    - add debugging tools (gdb, strace)
    #  "eclipse-debug"  - add Eclipse remote debugging support
    #  "tools-profile"  - add profiling tools (oprofile, lttng, valgrind)
    #  "tools-testapps" - add useful testing tools (ts_print, aplay, arecord etc.)
    #  "debug-tweaks"   - make an image suitable for development
    #                     e.g. ssh root access has a blank password
    # There are other application targets that can be used here too, see
    # meta/classes/image.bbclass and meta/classes/core-image.bbclass for more details.
    # We default to enabling the debugging tweaks.
    EXTRA_IMAGE_FEATURES ?= "debug-tweaks"

    #
    # Disk Space Monitoring during the build
    #
    # Monitor the disk space during the build. If there is less that 1GB of space or less
    # than 100K inodes in any key build location (TMPDIR, DL_DIR, SSTATE_DIR), gracefully
    # shutdown the build. If there is less that 100MB or 1K inodes, perform a hard abort
    # of the build. The reason for this is that running completely out of space can corrupt
    # files and damages the build in ways which may not be easily recoverable.
    # It's necesary to monitor /tmp, if there is no space left the build will fail
    # with very exotic errors.
    BB_DISKMON_DIRS ??= "\
    STOPTASKS,${TMPDIR},1G,100K \
    STOPTASKS,${DL_DIR},1G,100K \
    STOPTASKS,${SSTATE_DIR},1G,100K \
    STOPTASKS,/tmp,100M,100K \
    ABORT,${TMPDIR},100M,1K \
    ABORT,${DL_DIR},100M,1K \
    ABORT,${SSTATE_DIR},100M,1K \
    ABORT,/tmp,10M,1K"

    # By default disable interactive patch resolution (tasks will just fail instead):
    PATCHRESOLVE = "noop"

    EXTRA_IMAGE_FEATURES += "package-management"

    IMAGE_FSTYPES += "wic wic.bmap"

    # for accept freescale/nxp license
    ACCEPT_FSL_EULA = "1"

    # Set PREFERRED_PROVIDER_u-boot-fw-utils to prevent warning about
    # having two providers of u-boot-fw-utils
    PREFERRED_PROVIDER_u-boot-fw-utils = "libubootenv"

    #
    # Use busybox/mdev for system initialization
    #
    # VIRTUAL-RUNTIME_dev_manager = "busybox-mdev"
    # VIRTUAL-RUNTIME_login_manager = "busybox"
    # VIRTUAL-RUNTIME_init_manager = "busybox"
    # VIRTUAL-RUNTIME_initscripts = "initscripts"
    # VIRTUAL-RUNTIME_keymaps = "keymaps"
    # DISTRO_FEATURES_BACKFILL_CONSIDERED += "sysvinit"
    #
    #
    # Use systemd for system initialization
    #
    # DISTRO_FEATURES_append = " systemd sysvinit"
    # DISTRO_FEATURES_BACKFILL_CONSIDERED += "sysvinit"
    # VIRTUAL-RUNTIME_init_manager = "systemd"
    # VIRTUAL-RUNTIME_initscripts = "systemd-compat-units"
    #
    DISTRO_FEATURES_append = " systemd"
    DISTRO_FEATURES_BACKFILL_CONSIDERED += "sysvinit"
    VIRTUAL-RUNTIME_init_manager = "systemd"
    # VIRTUAL-RUNTIME_initscripts = "systemd-compat-units"

    MODEL_NAME = "imx8mp-evk"
    HW_REV = "1.0"

    # for adu/swupdate
    # SOC_DEFAULT_WKS_FILE_mx8 = "adu-imx8mp.wks"
    PREFERRED_PROVIDER_virtual/kernel = "linux-imx"
